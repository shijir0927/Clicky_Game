{"version":3,"sources":["images/logo.png","components/GameWrapper/index.js","components/Title/index.js","components/Card/index.js","components/CardsWrapper/index.js","App.js","index.js"],"names":["module","exports","Wrapper","props","className","children","Title","highscore","score","message","Card","onClick","clickCount","id","src","image","alt","CardsWrapper","App","shuffleCards","data","arr","i","randIndex","Math","floor","random","length","temp1","temp2","gameOver","state","storeData","JSON","stringify","localStorage","setItem","setState","cards","forEach","card","count","victoryCheck","filter","find","storage","parse","getItem","this","cardsData","animationIn","animationOut","isVisible","map","key","name","Component","ReactDom","render","document","getElementById"],"mappings":"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","file":"static/js/main.a5515d51.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/logo.f266fa2b.png\";","import React from 'react'\nimport './style.css'\n\nconst Wrapper = props =>(\n<div className=\"game-wrapper\">{props.children}</div>\n)\n\n\nexport default Wrapper","import React from \"react\";\nimport \"./style.css\";\nimport Logo from \"../../../src/images/logo.png\";\n\nlet Title = ({ highscore, score, message }) => (\n  <div>\n    <div className=\"title-wrapper\">\n      <div className=\"logo-score-wrapper\">\n        <div className=\"logo-wrapper\">\n          <h1>Seven Deadly Sins</h1>\n        </div>\n        <div className=\"score-wrapper\">\n          <h2>Current Score : {score}</h2>\n          <h2>High Score : {highscore}</h2>\n          <h2>{message}</h2>\n        </div>\n      </div>\n\n      <div className=\"directions-wrapper\">\n        <br></br>\n        <h1>Memory Game</h1>\n        <h2>\n          Clicking A Unique Card Grants A Point & Will Shuffle The Cards! Be\n          Careful, You Can't Select The Same Card Twice!\n        </h2>\n      </div>\n    </div>\n  </div>\n);\n\nexport default Title;\n","import React from 'react'\nimport './style.css'\n\n\nconst Card = props => (\n    <div className=\"card-wrapper\" onClick={() => props.clickCount(props.id)}>\n        <img src={props.image} alt={props.id}></img>\n\n    </div>\n)\n\n\n// class Card extends React.Component{\n\n// render(){\n//     return (\n//         <div className=\"card-wrapper\" onClick={() => this.props.clickCount(this.props.id)}>\n//         <img src={this.props.image} alt={this.props.id}></img>\n\n//     </div>\n//     )\n// }\n\n// }\nexport default Card","import React from 'react'\nimport './style.css'\n\nlet CardsWrapper = props =>(\n    <div className=\"cards-wrapper\">{props.children}</div>\n\n)\n\n\nexport default CardsWrapper","import React, { Component } from \"react\";\nimport Wrapper from \"./components/GameWrapper\";\nimport Title from \"./components/Title\";\nimport Card from \"./components/Card\";\nimport CardsWrapper from \"./components/CardsWrapper\";\nimport cardsData from \"./cards.json\";\nimport \"./index.css\";\nimport { Animated } from \"react-animated-css\";\n\nclass App extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      message: \"\",\n      cards: [],\n      score: 0,\n      highscore: 0\n    };\n  }\n\n  componentDidMount() {\n    const storage = JSON.parse(localStorage.getItem(\"memoryGame\")) || {\n      highscore: 0\n    };\n    this.setState({\n      highscore: storage.highscore,\n      cards: this.shuffleCards(cardsData)\n    });\n  }\n\n  shuffleCards = data => {\n    let arr = [...data];\n    for (let i in arr) {\n      let randIndex = Math.floor(Math.random() * arr.length);\n\n      let temp1 = arr[randIndex];\n      let temp2 = arr[i];\n\n      arr[randIndex] = temp2;\n      arr[i] = temp1;\n    }\n    return arr;\n  };\n\n  gameOver = () => {\n    if (this.state.score > this.state.highscore) {\n      const storeData = JSON.stringify({ highscore: this.state.score });\n      localStorage.setItem(\"memoryGame\", storeData);\n      this.setState({ highscore: this.state.score });\n    }\n\n    this.setState({ message: \"Game Over!\" });\n    this.state.cards.forEach(card => (card.count = 0));\n    this.setState({ score: 0 });\n  };\n\n  victoryCheck = () => {\n    let remainingCards = this.state.cards.filter(card => card.count === 0);\n    if (remainingCards.length === 0) {\n      this.setState({\n        message:\n          \"You Have Selected All The Cards! Keep Going To Increase Your Score\"\n      });\n      this.state.cards.forEach(card => (card.count = 0));\n    }\n  };\n\n  clickCount = id => {\n    this.state.cards.find(card => {\n      if (card.id === id) {\n        if (card.count === 0) {\n          this.setState({ message: \"\" });\n          this.setState({ score: this.state.score + 1 });\n          card.count = card.count + 1;\n          this.setState({ cards: this.shuffleCards(this.state.cards) });\n          this.victoryCheck();\n          return true;\n        } else {\n          this.gameOver();\n          this.setState({ cards: this.shuffleCards(this.state.cards) });\n          return true;\n        }\n      }\n      return false;\n    });\n  };\n\n  render() {\n    const { cards, score, highscore, message } = this.state;\n\n    return (\n      <Wrapper>\n        <Animated\n          animationIn=\"fadeInDown\"\n          animationOut=\"fadeOut\"\n          isVisible={true}\n        >\n          <Title score={score} highscore={highscore} message={message} />\n        </Animated>\n\n        <Animated\n          animationIn=\"fadeInRight\"\n          animationOut=\"fadeOut\"\n          isVisible={true}\n        >\n          <CardsWrapper>\n            {cards.map(card => (\n              <Card\n                clickCount={this.clickCount}\n                id={card.id}\n                key={card.id}\n                name={card.name}\n                image={card.image}\n              />\n            ))}\n          </CardsWrapper>\n        </Animated>\n      </Wrapper>\n    );\n  }\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDom from \"react-dom\";\nimport App from \"./App\";\nimport \"./index.css\";\n\nReactDom.render(<App />, document.getElementById(\"root\"));\n"],"sourceRoot":""}